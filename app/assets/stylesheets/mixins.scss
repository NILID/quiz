@mixin radial-gradient {
  background-image: -webkit-radial-gradient(50% 50%, ellipse cover, #4c8fa5 0%, #3c859d 15%, #001921 58%, #000 73%);
  background-image:    -moz-radial-gradient(50% 50%, ellipse cover, #4c8fa5 0%, #3c859d 15%, #001921 58%, #000 73%);
  background-image:     -ms-radial-gradient(50% 50%, ellipse cover, #4c8fa5 0%, #3c859d 15%, #001921 58%, #000 73%);
  background-image:      -o-radial-gradient(50% 50%, ellipse cover, #4c8fa5 0%, #3c859d 15%, #001921 58%, #000 73%);
  background-image:         radial-gradient(ellipse farthest-corner at 50% 50%, #4c8fa5 0%, #3c859d 15%, #001921 58%, #000 73%);
}

@mixin linear-gradient($start-color, $end-color, $position, $linear-position) {
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start-color}',endColorstr='#{$end-color}',GradientType=0);
  -ms-filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start-color}',endColorstr='#{$end-color}',GradientType=0);
  background-image: -webkit-gradient(linear, left top, $position, color-stop(0, $start-color), color-stop(1, $end-color));
  background-image: -webkit-linear-gradient($linear-position, $start-color 0%, $end-color 100%);
  background-image: -moz-linear-gradient($linear-position, $start-color 0%, $end-color 100%);
  background-image: -o-linear-gradient($linear-position, $start-color 0%, $end-color 100%);
  background-image: -ms-linear-gradient($linear-position, $start-color 0%, $end-color 100%);

  @each $get-position, $legal-position in (
                                           bottom: top,
                                              top: bottom,
                                             left: right,
                                            right: left,
                                         top left: bottom right,
                                        top right: bottom left,
                                      bottom left: top right,
                                     bottom right: to left
  ) {
    @if $get-position == $linear-position {
      background-image: linear-gradient(to $legal-position, $start-color 0%, $end-color 100%);
    }
  }
}

//
// @include box-shadow(inset 1px 0 #fff,1px 1px rgba(26,18,0,.3));
//

@mixin box-shadow($val...) {
  -webkit-box-shadow: $val;
     -moz-box-shadow: $val;
          box-shadow: $val;
}

//
// @include border-radius(12px);
//

@mixin border-radius($val) {
  -webkit-border-radius: $val;
     -moz-border-radius: $val;
          border-radius: $val;
}

//
// @include transition(background .5s)
//

@mixin transition($val...) {
  -webkit-transition: $val;
  -moz-transition: $val;
  -o-transition: $val;
  -ms-transition: $val;
  transition: $val;
}

@mixin rotate($val) {
  -webkit-transform: rotate($val);
  -moz-transform: rotate($val);
  -o-transform: rotate($val);
  -ms-transform: rotate($val);
  transform: rotate($val);
}

@mixin scale($val) {
  -webkit-transform: scale($val);
  -moz-transform: scale($val);
  -o-transform: scale($val);
  -ms-transform: scale($val);
  transform: scale($val);
}

//
// @include opacity(.3)
//

@mixin opacity($val) {
  filter: alpha(opacity = $val*100);
  -ms-filter: progid:DXImageTransform.Microsoft.Alpha(Opacity='#{$val * 100}');
  opacity: $val;
}